plugins {
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
    id 'pmd'
    id "com.diffplug.spotless" version "6.23.3"
    id 'com.gorylenko.gradle-git-properties' version '2.4.1'
}

group = 'com.sz'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

ext {
    set('springCloudVersion', "2023.0.0")
    conductorVersion = '3.17.0'
}

pmd {
    consoleOutput = true
    reportsDir = file("build/reports/pmd")
    ruleSets = [
            "java-ali-comment",
            "java-ali-concurrent",
            "java-ali-constant",
            "java-ali-exception",
            "java-ali-flowcontrol",
            "java-ali-naming",
            "java-ali-oop",
            "java-ali-orm",
            "java-ali-other",
            "java-ali-set"
    ]
}

configure(allprojects) {
    apply plugin: 'com.diffplug.spotless'

    spotless {
        format 'misc', {
            // define the files to apply `misc` to
            target '*.gradle', '.gitattributes', '.gitignore'

            // define the steps to apply to those files
            trimTrailingWhitespace()
            indentWithSpaces()
            endWithNewline()
        }
        java {
            googleJavaFormat().aosp()
            removeUnusedImports()
            importOrder('java', 'javax', 'org', 'com', 'com.sz', '', '\\#com.sz', '\\#')
        }
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'com.mysql:mysql-connector-j'

    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    implementation 'io.micrometer:micrometer-tracing-bridge-otel'

    // Conductor
    implementation("org.conductoross:conductor-metrics:${conductorVersion}") {
        exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
    }
    implementation("org.conductoross:conductor-common:${conductorVersion}") {
        exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
    }
    implementation("org.conductoross:conductor-client-spring:${conductorVersion}") {
        exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
    }
    implementation('com.netflix.archaius:archaius-core:0.7.6')
    implementation('com.sun.jersey:jersey-client:1.19.4')

    implementation('org.flywaydb:flyway-mysql')

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    pmd "com.alibaba.p3c:p3c-pmd:2.1.1"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

springBoot {
    buildInfo()
}

def hook = new File("$rootProject.projectDir/.git/hooks/pre-commit")
hook.text = """#!/usr/bin/env bash
./gradlew spotlessCheck"""
